version: '3.8'

services:

  nginx-proxy:
      image: jwilder/nginx-proxy
      container_name: nginx-proxy
      restart: "always"
      ports:
        - "80:80"
      volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - ../nginx.conf:/app/nginx.conf
        - ../../static:/app/static
        - ../../media:/app/media
      depends_on:
        - "web"

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  web:
    build: .
    restart: "always"
    command: gunicorn --bind 0.0.0.0:8000 config.wsgi:application
    volumes:
      - .:/code
      - ./static/:/code/static/
      - ./media/:/code/media/
    
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD} 
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env

  celery:
    build: .
    command: celery -A config worker --loglevel=info
    depends_on:
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    env_file:
      - .env

  celery-beat:
    build: .
    command: celery -A config beat --loglevel=info
    depends_on:
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    env_file:
      - .env

volumes:
  postgres_data:

networks:
  default:
    external:
      name: nginx-proxy
